<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.metamx</groupId>
  <artifactId>scala-util_${scala.version}</artifactId>
  <version>1.5.0</version>

  <scm>
    <connection>scm:git:git://github.com/metamx/scala-util.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/metamx/scala-util.git</developerConnection>
    <url>http://github.com/metamx/scala-util</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <profiles>
    <profile>
      <id>scala-2.9</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <scala.version.major>2.9</scala.version.major>
        <scala.version>${scala.version.major}.1</scala.version>
        <simplespec.version>0.6.0</simplespec.version>
      </properties>

      <dependencies>
        <dependency>
          <groupId>org.eintr.loglady</groupId>
          <artifactId>loglady_${scala.version}</artifactId>
          <version>1.1.0</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>scala-2.10</id>
      <properties>
        <scala.version.major>2.10</scala.version.major>
        <scala.version>${scala.version.major}.2</scala.version>
        <simplespec.version>0.8.4</simplespec.version>
      </properties>

      <dependencies>
        <dependency>
          <groupId>org.eintr.loglady</groupId>
          <artifactId>loglady_${scala.version.major}</artifactId>
          <version>1.1.0</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <dependencies>

    <!-- metamx -->
    <dependency>
      <groupId>com.metamx</groupId>
      <artifactId>java-util</artifactId>
      <version>0.21.0</version>
    </dependency>
    <dependency>
      <groupId>com.metamx</groupId>
      <artifactId>emitter</artifactId>
      <version>0.2.2</version>
    </dependency>
    <dependency>
      <groupId>com.metamx</groupId>
      <artifactId>server-metrics</artifactId>
      <version>0.0.4</version>
    </dependency>

    <!-- Misc. -->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>org.scala-tools.time</groupId>
      <artifactId>time_2.8.1</artifactId>
      <version>0.6.mmx0</version>
    </dependency>
    <dependency>
      <groupId>org.skife.config</groupId>
      <artifactId>config-magic</artifactId>
      <version>0.9</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>11.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>1.9</version>
    </dependency>

    <!-- json -->
    <dependency>
      <groupId>com.codahale</groupId>
      <artifactId>jerkson_2.9.1</artifactId>
      <version>0.5.0</version>
      <!--  Original observation, from when we used jerkson 0.4.2:

              jerkson wants jackson-[1.8.0,1.9.0), but sometimes when building on hudson it fails. The failure appears to
              either be (1) it doesn't see jackson-1.8.8.jar, or (2) it sees the jar but doesn't think it satisfies
              [1.8.0,1.9.0). I've never observed this failure locally. Both hudson (linux) and my local env (osx 10.7) are
              mvn-3.0.3. Excluding jackson from jerkson appears to solve the problem.

            This might still matter with 0.5.0, but we're on jackson-1.9.3 now instead of jackson-1.8.8.
      -->
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-core-asl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>1.9.3</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>1.9.3</version>
    </dependency>

    <!-- db -->
    <dependency>
      <!-- JDBI is a nice wrapper around JDBC -->
      <groupId>org.jdbi</groupId>
      <artifactId>jdbi</artifactId>
      <version>2.27</version>
    </dependency>
    <dependency>
      <!-- JDBC: MySQL connector (jdbc:mysql) -->
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.18</version>
    </dependency>
    <dependency>
      <!-- JDBC: In-memory db, for testing (jdbc:h2) -->
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.158</version>
    </dependency>
    <dependency>
      <!-- Connection pooling for JDBC -->
      <groupId>c3p0</groupId>
      <artifactId>c3p0</artifactId>
      <version>0.9.1.2</version>
    </dependency>

    <!-- Curator -->
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-framework</artifactId>
      <version>2.1.0-incubating</version>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-recipes</artifactId>
      <version>2.1.0-incubating</version>
    </dependency>
    <dependency>
      <groupId>org.apache.curator</groupId>
      <artifactId>curator-x-discovery</artifactId>
      <version>2.1.0-incubating</version>
    </dependency>

    <!-- scala -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

    <!-- Tests -->
    <dependency>
      <groupId>com.simple</groupId>
      <artifactId>simplespec_${scala.version}</artifactId>
      <version>${simplespec.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <configuration>
          <args>
            <arg>-unchecked</arg>
            <arg>-deprecation</arg>
          </args>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <useFile>false</useFile>
          <argLine>-Dfile.encoding=UTF-8</argLine>
          <systemPropertyVariables>
            <user.timezone>UTC</user.timezone>
          </systemPropertyVariables>
          <includes>
            <include>**/*Spec.class</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>central-local</id>
      <name>Central</name>
      <url>https://metamx.artifactoryonline.com/metamx/pub-libs-releases-local</url>
    </repository>
  </distributionManagement>

</project>
